basePath: /api/v1
definitions:
  models.Lyrics:
    properties:
      currentPage:
        type: integer
      group:
        type: string
      songId:
        type: integer
      title:
        type: string
      totalPages:
        type: integer
      verses:
        items:
          type: string
        type: array
      versesPerPage:
        type: integer
    type: object
  models.Song:
    properties:
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
      text:
        type: string
    required:
    - group
    - song
    type: object
host: localhost:8080
info:
  contact: {}
  description: API для управления библиотекой песен
  title: Music Library API
  version: "1.0"
paths:
  /songs:
    get:
      consumes:
      - application/json
      parameters:
      - description: Название группы
        in: query
        name: group
        type: string
      - description: Название песни
        in: query
        name: song
        type: string
      - description: Номер страницы
        in: query
        name: page
        type: integer
      - description: Размер страницы
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
      summary: Получение списка песен с фильтрацией
      tags:
      - songs
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные песни
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Song'
      summary: Добавление новой песни
      tags:
      - songs
  /songs/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Удаление песни
      tags:
      - songs
    put:
      consumes:
      - application/json
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      - description: Данные песни
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Song'
      summary: Изменение данных песни
      tags:
      - songs
  /songs/{id}/lyrics:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      - description: Номер страницы
        in: query
        name: page
        type: integer
      - description: Количество куплетов на странице
        in: query
        name: verses_per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Lyrics'
      summary: Получение текста песни с пагинацией по куплетам
      tags:
      - songs
swagger: "2.0"
